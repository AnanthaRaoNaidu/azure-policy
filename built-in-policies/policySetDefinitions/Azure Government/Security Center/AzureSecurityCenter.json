{
  "properties": {
    "displayName": "Enable Monitoring in Azure Security Center",
    "policyType": "BuiltIn",
    "description": "Monitor all the available security recommendations in Azure Security Center. This is the default policy for Azure Security Center.",
    "metadata": {
      "version": "13.0.0",
      "category": "Security Center"
    },
    "parameters": {
      "useServicePrincipalToProtectSubscriptionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Service principals should be used to protect your subscriptions instead of management certificates",
          "description": "Management certificates allow anyone who authenticates with them to manage the subscription(s) they are associated with. To manage subscriptions more securely, use of service principals with Resource Manager is recommended to limit the impact of a certificate compromise."
        }
      },
      "updateOsVersionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Operating system version should be the most current version for your cloud service roles",
          "description": "Keeping the operating system (OS) on the most recent supported version for your cloud service roles enhances the systems security posture."
        }
      },
      "resolveLogAnalyticsHealthIssuesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Log Analytics agent health issues should be resolved on your machines",
          "description": "Security Center uses the Log Analytics agent, formerly known as the Microsoft Monitoring Agent (MMA). To make sure your virtual machines are successfully monitored, you need to make sure the agent is installed on the virtual machines and properly collects security events to the configured workspace."
        }
      },
      "installLogAnalyticsAgentOnVmMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Log Analytics agent should be installed on your virtual machine for Azure Security Center monitoring",
          "description": "This policy audits any Windows/Linux virtual machines (VMs) if the Log Analytics agent is not installed which Security Center uses to monitor for security vulnerabilities and threats"
        }
      },
      "installLogAnalyticsAgentOnVmssMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Log Analytics agent should be installed on your virtual machine scale sets for Azure Security Center monitoring",
          "description": "Security Center collects data from your Azure virtual machines (VMs) to monitor for security vulnerabilities and threats."
        }
      },
      "vmssSystemUpdatesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "System updates on virtual machine scale sets should be installed",
          "description": "Enable or disable virtual machine scale sets reporting of system updates"
        }
      },
      "vmssEndpointProtectionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Endpoint protection solution should be installed on virtual machine scale sets",
          "description": "Enable or disable virtual machine scale sets endpoint protection monitoring"
        }
      },
      "vmssOsVulnerabilitiesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Vulnerabilities in security configuration on your virtual machine scale sets should be remediated",
          "description": "Enable or disable virtual machine scale sets OS vulnerabilities monitoring"
        }
      },
      "systemUpdatesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "System updates should be installed on your machines",
          "description": "Enable or disable reporting of system updates"
        }
      },
      "systemConfigurationsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Vulnerabilities in security configuration on your machines should be remediated",
          "description": "Enable or disable OS vulnerabilities monitoring (based on a configured baseline)"
        }
      },
      "endpointProtectionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor missing Endpoint Protection in Azure Security Center",
          "description": "Enable or disable endpoint protection monitoring"
        }
      },
      "diskEncryptionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Disk encryption should be applied on virtual machines",
          "description": "Enable or disable the monitoring for VM disk encryption"
        }
      },
      "networkSecurityGroupsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor network security groups",
          "description": "Enable or disable monitoring of network security groups with permissive rules",
          "deprecated": true
        }
      },
      "networkSecurityGroupsOnSubnetsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Network Security Groups on the subnet level should be enabled",
          "description": "Enable or disable monitoring of NSGs on subnets"
        }
      },
      "networkSecurityGroupsOnVirtualMachinesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Internet-facing virtual machines should be protected with network security groups",
          "description": "Enable or disable monitoring of NSGs on VMs"
        }
      },
      "networkSecurityGroupsOnInternalVirtualMachinesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Non-internet-facing virtual machines should be protected with network security groups",
          "description": "Enable or disable monitoring of NSGs on VMs"
        }
      },
      "webApplicationFirewallMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Web ports should be restricted on Network Security Groups associated to your VM",
          "description": "Enable or disable the monitoring of unprotected web applications",
          "deprecated": true
        }
      },
      "nextGenerationFirewallMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "All network ports should be restricted on network security groups associated to your virtual machine",
          "description": "Enable or disable overly permissive inbound NSG rules monitoring."
        }
      },
      "vulnerabilityAssesmentMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Vulnerabilities should be remediated by a Vulnerability Assessment solution",
          "description": "Enable or disable the detection of VM vulnerabilities by a vulnerability assessment solution"
        }
      },
      "storageEncryptionMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Audit missing blob encryption for storage accounts",
          "description": "Enable or disable the monitoring of blob encryption for storage accounts",
          "deprecated": true
        }
      },
      "jitNetworkAccessMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Management ports of virtual machines should be protected with just-in-time network access control",
          "description": "Enable or disable the monitoring of network just-in-time access"
        }
      },
      "adaptiveApplicationControlsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Adaptive application controls for defining safe applications should be enabled on your machines",
          "description": "Enable or disable application controls to define the list of known-safe applications running on your machines, and alert you when other applications run"
        }
      },
      "adaptiveApplicationControlsUpdateMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Allowlist rules in your adaptive application control policy should be updated",
          "description": "Enable or disable the monitoring for changes in behavior on groups of machines configured for auditing by Azure Security Center's adaptive application controls"
        }
      },
      "sqlAuditingMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor unaudited SQL servers in Azure Security Center",
          "description": "Enable or disable the monitoring of unaudited SQL databases",
          "deprecated": true
        }
      },
      "sqlEncryptionMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor unencrypted SQL databases in Azure Security Center",
          "description": "Enable or disable the monitoring of unencrypted SQL databases",
          "deprecated": true
        }
      },
      "sqlDbEncryptionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Transparent Data Encryption on SQL databases should be enabled",
          "description": "Enable or disable the monitoring of unencrypted SQL databases"
        }
      },
      "sqlServerAuditingMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Auditing should be enabled on advanced data security settings on SQL Server",
          "description": "Enable or disable the monitoring of unaudited SQL Servers"
        }
      },
      "kubernetesServiceRbacEnabledMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Role-Based Access Control (RBAC) should be used on Kubernetes Services",
          "description": "Enable or disable the monitoring of Kubernetes Services without RBAC enabled"
        }
      },
      "kubernetesServicePspEnabledMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Pod Security Policies should be defined on Kubernetes Services",
          "description": "Enable or disable the monitoring of Kubernetes Services without Pod Security Policy enabled",
          "deprecated": true
        }
      },
      "kubernetesServiceAuthorizedIPRangesEnabledMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Authorized IP ranges should be defined on Kubernetes Services",
          "description": "Enable or disable the monitoring of Kubernetes Services without Authorized IP Ranges enabled"
        }
      },
      "kubernetesServiceVersionUpToDateMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Kubernetes Services should be upgraded to a non vulnerable Kubernetes version",
          "description": "Enable or disable the monitoring of the Kubernetes Services with versions that contain known vulnerabilities"
        }
      },
      "diagnosticsLogsInAppServiceMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor diagnostic logs in Azure App Services",
          "description": "Enable or disable the monitoring of diagnostics logs in Azure App Services",
          "deprecated": true
        }
      },
      "diagnosticsLogsInSelectiveAppServicesMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in App Services should be enabled",
          "description": "Enable or disable the monitoring of diagnostics logs in Azure App Services"
        }
      },
      "encryptionOfAutomationAccountMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Automation account variables should be encrypted",
          "description": "Enable or disable the monitoring of automation account encryption"
        }
      },
      "diagnosticsLogsInBatchAccountMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Batch accounts should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Batch accounts"
        }
      },
      "diagnosticsLogsInBatchAccountRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) for logs in Batch accounts",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "metricAlertsInBatchAccountMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Metric alert rules should be configured on Batch accounts",
          "description": "Enable or disable the monitoring of metric alerts in Batch accounts",
          "deprecated": true
        }
      },
      "classicComputeVMsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Virtual machines should be migrated to new Azure Resource Manager resources",
          "description": "Enable or disable the monitoring of classic compute VMs"
        }
      },
      "classicStorageAccountsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Storage accounts should be migrated to new Azure Resource Manager resources",
          "description": "Enable or disable the monitoring of classic storage accounts"
        }
      },
      "diagnosticsLogsInDataLakeAnalyticsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Data Lake Analytics should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Data Lake Analytics accounts"
        }
      },
      "diagnosticsLogsInDataLakeAnalyticsRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Data Lake Analytics accounts",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "diagnosticsLogsInDataLakeStoreMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Azure Data Lake Store should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Data Lake Store accounts"
        }
      },
      "diagnosticsLogsInDataLakeStoreRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Data Lake Store accounts",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "diagnosticsLogsInEventHubMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Event Hub should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Event Hub accounts"
        }
      },
      "diagnosticsLogsInEventHubRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Event Hub accounts",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "diagnosticsLogsInKeyVaultMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Key Vault should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Key Vault vaults"
        }
      },
      "diagnosticsLogsInKeyVaultRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Key Vault vaults",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "diagnosticsLogsInLogicAppsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Logic Apps should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Logic Apps workflows"
        }
      },
      "diagnosticsLogsInLogicAppsRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Logic Apps workflows",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "diagnosticsLogsInRedisCacheMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Only secure connections to your Redis Cache should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Azure Redis Cache"
        }
      },
      "diagnosticsLogsInSearchServiceMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Search services should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Azure Search service"
        }
      },
      "diagnosticsLogsInSearchServiceRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Azure Search service",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "aadAuthenticationInServiceFabricMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Service Fabric clusters should only use Azure Active Directory for client authentication",
          "description": "Enable or disable the monitoring of Azure Active Directory for client authentication in Service Fabric"
        }
      },
      "clusterProtectionLevelInServiceFabricMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Service Fabric clusters should have the ClusterProtectionLevel property set to EncryptAndSign",
          "description": "Enable or disable the monitoring of cluster protection level in Service Fabric"
        }
      },
      "diagnosticsLogsInServiceBusMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Service Bus should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Service Bus"
        }
      },
      "diagnosticsLogsInServiceBusRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Service Bus",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "namespaceAuthorizationRulesInServiceBusMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "All authorization rules except RootManageSharedAccessKey should be removed from Service Bus namespace",
          "description": "Enable or disable the monitoring of Service Bus namespace authorization rules",
          "deprecated": true
        }
      },
      "aadAuthenticationInSqlServerMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "An Azure Active Directory administrator should be provisioned for SQL servers",
          "description": "Enable or disable the monitoring of an Azure AD admininistrator for SQL server"
        }
      },
      "secureTransferToStorageAccountMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Secure transfer to storage accounts should be enabled",
          "description": "Enable or disable the monitoring of secure transfer to storage account"
        }
      },
      "diagnosticsLogsInStreamAnalyticsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Azure Stream Analytics should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Stream Analytics"
        }
      },
      "diagnosticsLogsInStreamAnalyticsRetentionDays": {
        "type": "string",
        "defaultValue": "365",
        "metadata": {
          "displayName": "Required retention (in days) of logs in Stream Analytics",
          "description": "The required diagnostic logs retention period in days"
        }
      },
      "useRbacRulesMonitoringEffect": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Audit usage of custom RBAC rules",
          "description": "Enable or disable the monitoring of using built-in RBAC rules"
        }
      },
      "disableUnrestrictedNetworkToStorageAccountMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Audit unrestricted network access to storage accounts",
          "description": "Enable or disable the monitoring of network access to storage account"
        }
      },
      "diagnosticsLogsInServiceFabricMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Diagnostic logs in Virtual Machine Scale Sets should be enabled",
          "description": "Enable or disable the monitoring of diagnostic logs in Service Fabric"
        }
      },
      "accessRulesInEventHubNamespaceMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "metadata": {
          "displayName": "All authorization rules except RootManageSharedAccessKey should be removed from Event Hub namespace",
          "description": "Enable or disable the monitoring of access rules in Event Hub namespaces",
          "deprecated": true
        }
      },
      "accessRulesInEventHubMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Authorization rules on the Event Hub instance should be defined",
          "description": "Enable or disable the monitoring of access rules in Event Hubs",
          "deprecated": true
        }
      },
      "sqlDbVulnerabilityAssesmentMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Vulnerabilities on your SQL databases should be remediated",
          "description": "Enable or disable the monitoring of Vulnerability Assessment scan results and recommendations for how to remediate database vulnerabilities."
        }
      },
      "sqlDbDataClassificationMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Sensitive data in your SQL databases should be classified",
          "description": "Enable or disable the monitoring of sensitive data classification in databases."
        }
      },
      "identityDesignateLessThanOwnersMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "A maximum of 3 owners should be designated for your subscription",
          "description": "Enable or disable the monitoring of maximum owners in subscription"
        }
      },
      "identityDesignateMoreThanOneOwnerMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "There should be more than one owner assigned to your subscription",
          "description": "Enable or disable the monitoring of minimum owners in subscription"
        }
      },
      "identityEnableMFAForOwnerPermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "MFA should be enabled on accounts with owner permissions on your subscription",
          "description": "Enable or disable the monitoring of MFA for accounts with owner permissions in subscription"
        }
      },
      "identityEnableMFAForWritePermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "MFA should be enabled accounts with write permissions on your subscription",
          "description": "Enable or disable the monitoring of MFA for accounts with write permissions in subscription"
        }
      },
      "identityEnableMFAForReadPermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "MFA should be enabled on accounts with read permissions on your subscription",
          "description": "Enable or disable the monitoring of MFA for accounts with read permissions in subscription"
        }
      },
      "identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Deprecated accounts with owner permissions should be removed from your subscription",
          "description": "Enable or disable the monitoring of deprecated acounts with owner permissions in subscription"
        }
      },
      "identityRemoveDeprecatedAccountMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Deprecated accounts should be removed from your subscription",
          "description": "Enable or disable the monitoring of deprecated acounts in subscription"
        }
      },
      "identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "External accounts with owner permissions should be removed from your subscription",
          "description": "Enable or disable the monitoring of external acounts with owner permissions in subscription"
        }
      },
      "identityRemoveExternalAccountWithWritePermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "External accounts with write permissions should be removed from your subscription",
          "description": "Enable or disable the monitoring of external acounts with write permissions in subscription"
        }
      },
      "identityRemoveExternalAccountWithReadPermissionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "External accounts with read permissions should be removed from your subscription",
          "description": "Enable or disable the monitoring of external acounts with read permissions in subscription"
        }
      },
      "apiAppConfigureIPRestrictionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor Configure IP restrictions for API App",
          "description": "Enable or disable the monitoring of IP restrictions for API App",
          "deprecated": true
        }
      },
      "functionAppConfigureIPRestrictionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor Configure IP restrictions for Function App",
          "description": "Enable or disable the monitoring of IP restrictions for Function App",
          "deprecated": true
        }
      },
      "webAppConfigureIPRestrictionsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor Configure IP restrictions for Web App",
          "description": "Enable or disable the monitoring of IP restrictions for Web App",
          "deprecated": true
        }
      },
      "apiAppDisableRemoteDebuggingMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Remote debugging should be turned off for API App",
          "description": "Enable or disable the monitoring of remote debugging for API App"
        }
      },
      "functionAppDisableRemoteDebuggingMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Remote debugging should be turned off for Function App",
          "description": "Enable or disable the monitoring of remote debugging for Function App"
        }
      },
      "webAppDisableRemoteDebuggingMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Remote debugging should be turned off for Web Application",
          "description": "Enable or disable the monitoring of remote debugging for Web App"
        }
      },
      "apiAppAuditFtpsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "FTPS should be required in your API App",
          "description": "Enable FTPS enforcement for enhanced security"
        }
      },
      "functionAppAuditFtpsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "FTPS should be required in your Function App",
          "description": "Enable FTPS enforcement for enhanced security"
        }
      },
      "webAppAuditFtpsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "FTPS should be required in your Web App",
          "description": "Enable FTPS enforcement for enhanced security"
        }
      },
      "apiAppUseManagedIdentityMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "A managed identity should be used in your API App",
          "description": "Use a managed identity for enhanced authentication security"
        }
      },
      "functionAppUseManagedIdentityMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "A managed identity should be used in your Function App",
          "description": "Use a managed identity for enhanced authentication security"
        }
      },
      "webAppUseManagedIdentityMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "A managed identity should be used in your Web App",
          "description": "Use a managed identity for enhanced authentication security"
        }
      },
      "apiAppRequireLatestTlsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Latest TLS version should be used in your API App",
          "description": "Upgrade to the latest TLS version"
        }
      },
      "functionAppRequireLatestTlsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Latest TLS version should be used in your Function App",
          "description": "Upgrade to the latest TLS version"
        }
      },
      "webAppRequireLatestTlsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Latest TLS version should be used in your Web App",
          "description": "Upgrade to the latest TLS version"
        }
      },
      "apiAppDisableWebSocketsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor disable web sockets for API App",
          "description": "Enable or disable the monitoring of web sockets for API App",
          "deprecated": true
        }
      },
      "functionAppDisableWebSocketsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor disable web sockets for Function App",
          "description": "Enable or disable the monitoring of web sockets for Function App",
          "deprecated": true
        }
      },
      "webAppDisableWebSocketsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor disable web sockets for Web App",
          "description": "Enable or disable the monitoring of web sockets for Web App",
          "deprecated": true
        }
      },
      "apiAppEnforceHttpsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "API App should only be accessible over HTTPS",
          "description": "Enable or disable the monitoring of the use of HTTPS in API App",
          "deprecated": true
        }
      },
      "functionAppEnforceHttpsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Function App should only be accessible over HTTPS",
          "description": "Enable or disable the monitoring of the use of HTTPS in function App",
          "deprecated": true
        }
      },
      "webAppEnforceHttpsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Web Application should only be accessible over HTTPS",
          "description": "Enable or disable the monitoring of the use of HTTPS in Web App",
          "deprecated": true
        }
      },
      "apiAppEnforceHttpsMonitoringEffectV2": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "API App should only be accessible over HTTPS V2",
          "description": "Enable or disable the monitoring of the use of HTTPS in API App V2"
        }
      },
      "functionAppEnforceHttpsMonitoringEffectV2": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Function App should only be accessible over HTTPS V2",
          "description": "Enable or disable the monitoring of the use of HTTPS in function App V2"
        }
      },
      "webAppEnforceHttpsMonitoringEffectV2": {
        "type": "string",
        "defaultValue": "Audit",
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Web Application should only be accessible over HTTPS V2",
          "description": "Enable or disable the monitoring of the use of HTTPS in Web App V2"
        }
      },
      "apiAppRestrictCORSAccessMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "CORS should not allow every resource to access your API App",
          "description": "Enable or disable the monitoring of CORS restrictions for API App"
        }
      },
      "functionAppRestrictCORSAccessMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "CORS should not allow every resource to access your Function App",
          "description": "Enable or disable the monitoring of CORS restrictions for API Function"
        }
      },
      "webAppRestrictCORSAccessMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "CORS should not allow every resource to access your Web Application",
          "description": "Enable or disable the monitoring of CORS restrictions for API Web"
        }
      },
      "apiAppUsedCustomDomainsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor the custom domain use in API App",
          "description": "Enable or disable the monitoring of custom domain use in API App",
          "deprecated": true
        }
      },
      "functionAppUsedCustomDomainsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor the custom domain use in Function App",
          "description": "Enable or disable the monitoring of custom domain use in Function App",
          "deprecated": true
        }
      },
      "webAppUsedCustomDomainsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor the custom domain use in Web App",
          "description": "Enable or disable the monitoring of custom domain use in Web App",
          "deprecated": true
        }
      },
      "apiAppUsedLatestDotNetMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest .NET in API App",
          "description": "Enable or disable the monitoring of .NET version in API App",
          "deprecated": true
        }
      },
      "webAppUsedLatestDotNetMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest .NET in Web App",
          "description": "Enable or disable the monitoring of .NET version in Web App",
          "deprecated": true
        }
      },
      "apiAppUsedLatestJavaMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest Java in API App",
          "description": "Enable or disable the monitoring of Java version in API App",
          "deprecated": true
        }
      },
      "webAppUsedLatestJavaMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest Java in Web App",
          "description": "Enable or disable the monitoring of Java version in Web App",
          "deprecated": true
        }
      },
      "webAppUsedLatestNodeJsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest Node.js in Web App",
          "description": "Enable or disable the monitoring of Node.js version in Web App",
          "deprecated": true
        }
      },
      "apiAppUsedLatestPHPMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest PHP in API App",
          "description": "Enable or disable the monitoring of PHP version in API App",
          "deprecated": true
        }
      },
      "webAppUsedLatestPHPMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest PHP in Web App",
          "description": "Enable or disable the monitoring of PHP version in Web App",
          "deprecated": true
        }
      },
      "apiAppUsedLatestPythonMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest Python in API App",
          "description": "Enable or disable the monitoring of Python version in API App",
          "deprecated": true
        }
      },
      "webAppUsedLatestPythonMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Monitor use latest Python in Web App",
          "description": "Enable or disable the monitoring of Python version in Web App",
          "deprecated": true
        }
      },
      "vnetEnableDDoSProtectionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Azure DDoS Protection Standard should be enabled",
          "description": "Enable or disable the monitoring of DDoS protection for virtual network"
        }
      },
      "restrictAccessToManagementPortsMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Management ports should be closed on your virtual machines",
          "description": "Enable or disable the monitoring of open management ports on Virtual Machines"
        }
      },
      "restrictAccessToAppServicesMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Access to App Services should be restricted",
          "description": "Enable or disable the monitoring of permissive network access to app-services",
          "deprecated": true
        }
      },
      "disableIPForwardingMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "IP Forwarding on your virtual machine should be disabled",
          "description": "Enable or disable the monitoring of IP forwarding on virtual machines"
        }
      },
      "containerBenchmarkMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Vulnerabilities in container security configurations should be remediated",
          "description": "Enable or disable container benchmark monitoring"
        }
      },
      "AzureFirewallEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "All Internet traffic should be routed via your deployed Azure Firewall",
          "description": "Enable or disable All Internet traffic should be routed via your deployed Azure Firewall"
        }
      },
      "ArcWindowsMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Log Analytics agent should be installed on your  Windows Azure Arc machines",
          "description": "Enable or disable Log Analytics agent should be installed on your  Windows Azure Arc machines",
          "deprecated": true
        }
      },
      "ArcLinuxMonitoringEffect": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Log Analytics agent should be installed on your Linux Azure Arc machines",
          "description": "Enable or disable Log Analytics agent should be installed on your Linux Azure Arc machines",
          "deprecated": true
        }
      },
      "sqlServersAdvancedDataSecurityMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Azure Defender for Azure SQL Database servers should be enabled",
          "description": "Enable or disable Azure Defender for Azure SQL Database servers"
        }
      },
      "storageAccountsAdvancedDataSecurityMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Azure Defender for Storage should be enabled",
          "description": "Enable or disable Azure Defender for storage"
        }
      },
      "containerRegistryAdvancedThreatProtectionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Azure Defender for container registries should be enabled",
          "description": "Enable or disable Azure Defender for container registries"
        }
      },
      "virtualMachinesAdvancedThreatProtectionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Azure Defender for servers should be enabled",
          "description": "Enable or disable Azure Defender for servers"
        }
      },
      "kubernetesServiceAdvancedThreatProtectionMonitoringEffect": {
        "type": "string",
        "defaultValue": "AuditIfNotExists",
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "metadata": {
          "displayName": "Azure Defender for Kubernetes should be enabled",
          "description": "Enable or disable Azure Defender for Kubernetes"
        }
      }
    },
    "policyDefinitions": [
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6646a0bd-e110-40ca-bb97-84fcee63c414",
        "policyDefinitionReferenceId": "useServicePrincipalToProtectSubscriptionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('useServicePrincipalToProtectSubscriptionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5a913c68-0590-402c-a531-e57e19379da3",
        "policyDefinitionReferenceId": "updateOsVersionMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('updateOsVersionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d62cfe2b-3ab0-4d41-980d-76803b58ca65",
        "policyDefinitionReferenceId": "resolveLogAnalyticsHealthIssuesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('resolveLogAnalyticsHealthIssuesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4fe33eb-e377-4efb-ab31-0784311bc499",
        "policyDefinitionReferenceId": "installLogAnalyticsAgentOnVmMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('installLogAnalyticsAgentOnVmMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "policyDefinitionReferenceId": "installLogAnalyticsAgentOnVmssMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('installLogAnalyticsAgentOnVmssMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "policyDefinitionReferenceId": "vmssOsVulnerabilitiesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('vmssOsVulnerabilitiesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de",
        "policyDefinitionReferenceId": "vmssEndpointProtectionMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('vmssEndpointProtectionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "policyDefinitionReferenceId": "vmssSystemUpdatesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('vmssSystemUpdatesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7c1b1214-f927-48bf-8882-84f0af6588b1",
        "policyDefinitionReferenceId": "diagnosticsLogsInServiceFabricMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInServiceFabricMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "policyDefinitionReferenceId": "disableUnrestrictedNetworkToStorageAccountMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('disableUnrestrictedNetworkToStorageAccountMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "policyDefinitionReferenceId": "useRbacRulesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('useRbacRulesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "policyDefinitionReferenceId": "diagnosticsLogsInStreamAnalyticsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInStreamAnalyticsMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInStreamAnalyticsRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
        "policyDefinitionReferenceId": "secureTransferToStorageAccountMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('secureTransferToStorageAccountMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "policyDefinitionReferenceId": "aadAuthenticationInSqlServerMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('aadAuthenticationInSqlServerMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "policyDefinitionReferenceId": "diagnosticsLogsInServiceBusMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInServiceBusMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInServiceBusRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/617c02be-7f02-4efd-8836-3180d47b6c68",
        "policyDefinitionReferenceId": "clusterProtectionLevelInServiceFabricMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('clusterProtectionLevelInServiceFabricMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "policyDefinitionReferenceId": "aadAuthenticationInServiceFabricMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('aadAuthenticationInServiceFabricMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "policyDefinitionReferenceId": "diagnosticsLogsInSearchServiceMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInSearchServiceMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInSearchServiceRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "policyDefinitionReferenceId": "diagnosticsLogsInRedisCacheMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInRedisCacheMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d",
        "policyDefinitionReferenceId": "diagnosticsLogsInLogicAppsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInLogicAppsMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInLogicAppsRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "policyDefinitionReferenceId": "diagnosticsLogsInKeyVaultMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInKeyVaultMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInKeyVaultRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "policyDefinitionReferenceId": "diagnosticsLogsInEventHubMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInEventHubMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInEventHubRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "policyDefinitionReferenceId": "diagnosticsLogsInDataLakeStoreMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInDataLakeStoreMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInDataLakeStoreRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "policyDefinitionReferenceId": "diagnosticsLogsInDataLakeAnalyticsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInDataLakeAnalyticsMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInDataLakeAnalyticsRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "policyDefinitionReferenceId": "classicStorageAccountsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('classicStorageAccountsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "policyDefinitionReferenceId": "classicComputeVMsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('classicComputeVMsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d",
        "policyDefinitionReferenceId": "diagnosticsLogsInBatchAccountMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInBatchAccountMonitoringEffect')]"
          },
          "requiredRetentionDays": {
            "value": "[parameters('diagnosticsLogsInBatchAccountRetentionDays')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "policyDefinitionReferenceId": "encryptionOfAutomationAccountMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('encryptionOfAutomationAccountMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b607c5de-e7d9-4eee-9e5c-83f1bcee4fa0",
        "policyDefinitionReferenceId": "diagnosticsLogsInSelectiveAppServicesMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('diagnosticsLogsInSelectiveAppServicesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12",
        "policyDefinitionReferenceId": "sqlDbEncryptionMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlDbEncryptionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "policyDefinitionReferenceId": "sqlServerAuditingMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlServerAuditingMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60",
        "policyDefinitionReferenceId": "systemUpdatesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('systemUpdatesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "policyDefinitionReferenceId": "jitNetworkAccessMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('jitNetworkAccessMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "policyDefinitionReferenceId": "adaptiveApplicationControlsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('adaptiveApplicationControlsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534",
        "policyDefinitionReferenceId": "adaptiveApplicationControlsUpdateMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('adaptiveApplicationControlsUpdateMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e71308d3-144b-4262-b144-efdc3cc90517",
        "policyDefinitionReferenceId": "networkSecurityGroupsOnSubnetsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('networkSecurityGroupsOnSubnetsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "policyDefinitionReferenceId": "networkSecurityGroupsOnVirtualMachinesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('networkSecurityGroupsOnVirtualMachinesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bb91dfba-c30d-4263-9add-9c2384e659a6",
        "policyDefinitionReferenceId": "networkSecurityGroupsOnInternalVirtualMachinesMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('networkSecurityGroupsOnInternalVirtualMachinesMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "policyDefinitionReferenceId": "systemConfigurationsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('systemConfigurationsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "policyDefinitionReferenceId": "endpointProtectionMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('endpointProtectionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
        "policyDefinitionReferenceId": "diskEncryptionMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('diskEncryptionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/760a85ff-6162-42b3-8d70-698e268f648c",
        "policyDefinitionReferenceId": "vulnerabilityAssessmentMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('vulnerabilityAssesmentMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
        "policyDefinitionReferenceId": "nextGenerationFirewallMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('nextGenerationFirewallMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "policyDefinitionReferenceId": "sqlDbVulnerabilityAssesmentMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlDbVulnerabilityAssesmentMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cc9835f2-9f6b-4cc8-ab4a-f8ef615eb349",
        "policyDefinitionReferenceId": "sqlDbDataClassificationMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlDbDataClassificationMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "policyDefinitionReferenceId": "identityDesignateLessThanOwnersMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityDesignateLessThanOwnersMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "policyDefinitionReferenceId": "identityDesignateMoreThanOneOwnerMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityDesignateMoreThanOneOwnerMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/aa633080-8b72-40c4-a2d7-d00c03e80bed",
        "policyDefinitionReferenceId": "identityEnableMFAForOwnerPermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityEnableMFAForOwnerPermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9297c21d-2ed6-4474-b48f-163f75654ce3",
        "policyDefinitionReferenceId": "identityEnableMFAForWritePermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityEnableMFAForWritePermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e3576e28-8b17-4677-84c3-db2990658d64",
        "policyDefinitionReferenceId": "identityEnableMFAForReadPermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityEnableMFAForReadPermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ebb62a0c-3560-49e1-89ed-27e074e9f8ad",
        "policyDefinitionReferenceId": "identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6b1cbf55-e8b6-442f-ba4c-7246b6381474",
        "policyDefinitionReferenceId": "identityRemoveDeprecatedAccountMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveDeprecatedAccountMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8456c1c-aa66-4dfb-861a-25d127b775c9",
        "policyDefinitionReferenceId": "identityRemoveExternalAccountWithOwnerPermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5c607a2e-c700-4744-8254-d77e7c9eb5e4",
        "policyDefinitionReferenceId": "identityRemoveExternalAccountWithWritePermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveExternalAccountWithWritePermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f76cf89-fbf2-47fd-a3f4-b891fa780b60",
        "policyDefinitionReferenceId": "identityRemoveExternalAccountWithReadPermissionsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('identityRemoveExternalAccountWithReadPermissionsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e9c8d085-d9cc-4b17-9cdc-059f1f01f19e",
        "policyDefinitionReferenceId": "apiAppDisableRemoteDebuggingMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('apiAppDisableRemoteDebuggingMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "policyDefinitionReferenceId": "functionAppDisableRemoteDebuggingMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppDisableRemoteDebuggingMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "policyDefinitionReferenceId": "webAppDisableRemoteDebuggingMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppDisableRemoteDebuggingMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9a1b8c48-453a-4044-86c3-d8bfd823e4f5",
        "policyDefinitionReferenceId": "apiAppAuditFtpsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('apiAppAuditFtpsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "policyDefinitionReferenceId": "webAppAuditFtpsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppAuditFtpsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15",
        "policyDefinitionReferenceId": "functionAppAuditFtpsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppAuditFtpsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c4d441f8-f9d9-4a9e-9cef-e82117cb3eef",
        "policyDefinitionReferenceId": "apiAppUseManagedIdentityMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('apiAppUseManagedIdentityMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
        "policyDefinitionReferenceId": "webAppUseManagedIdentityMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppUseManagedIdentityMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "policyDefinitionReferenceId": "functionAppUseManagedIdentityMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppUseManagedIdentityMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e",
        "policyDefinitionReferenceId": "apiAppRequireLatestTlsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('apiAppRequireLatestTlsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "policyDefinitionReferenceId": "webAppRequireLatestTlsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppRequireLatestTlsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
        "policyDefinitionReferenceId": "functionAppRequireLatestTlsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppRequireLatestTlsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b7ddfbdc-1260-477d-91fd-98bd9be789a6",
        "policyDefinitionReferenceId": "apiAppEnforceHttpsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('apiAppEnforceHttpsMonitoringEffectV2')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "policyDefinitionReferenceId": "functionAppEnforceHttpsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppEnforceHttpsMonitoringEffectV2')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d",
        "policyDefinitionReferenceId": "webAppEnforceHttpsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppEnforceHttpsMonitoringEffectV2')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/358c20a6-3f9e-4f0e-97ff-c6ce485e2aac",
        "policyDefinitionReferenceId": "apiAppRestrictCORSAccessMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('apiAppRestrictCORSAccessMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "policyDefinitionReferenceId": "functionAppRestrictCORSAccessMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('functionAppRestrictCORSAccessMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "policyDefinitionReferenceId": "webAppRestrictCORSAccessMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('webAppRestrictCORSAccessMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "policyDefinitionReferenceId": "vnetEnableDDoSProtectionMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('vnetEnableDDoSProtectionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917",
        "policyDefinitionReferenceId": "restrictAccessToManagementPortsMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('restrictAccessToManagementPortsMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd352bd5-2853-4985-bf0d-73806b4a5744",
        "policyDefinitionReferenceId": "disableIPForwardingMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('disableIPForwardingMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8cbc669-f12d-49eb-93e7-9273119e9933",
        "policyDefinitionReferenceId": "containerBenchmarkMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('containerBenchmarkMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "policyDefinitionReferenceId": "kubernetesServiceRbacEnabledMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesServiceRbacEnabledMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fb893a29-21bb-418c-a157-e99480ec364c",
        "policyDefinitionReferenceId": "kubernetesServiceVersionUpToDateMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesServiceVersionUpToDateMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "policyDefinitionReferenceId": "kubernetesServiceAuthorizedIPRangesEnabledMonitoring",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesServiceAuthorizedIPRangesEnabledMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9df61aa2-b10c-4efe-aae0-295cc936930b",
        "policyDefinitionReferenceId": "AzureFirewallEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('AzureFirewallEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "policyDefinitionReferenceId": "sqlServersAdvancedDataSecurityMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('sqlServersAdvancedDataSecurityMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "policyDefinitionReferenceId": "storageAccountsAdvancedDataSecurityMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('storageAccountsAdvancedDataSecurityMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c25d9a16-bc35-4e15-a7e5-9db606bf9ed4",
        "policyDefinitionReferenceId": "containerRegistryAdvancedThreatProtectionMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('containerRegistryAdvancedThreatProtectionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "policyDefinitionReferenceId": "virtualMachinesAdvancedThreatProtectionMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('virtualMachinesAdvancedThreatProtectionMonitoringEffect')]"
          }
        }
      },
      {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/523b5cd1-3e23-492f-a539-13118b6d1e3a",
        "policyDefinitionReferenceId": "kubernetesServiceAdvancedThreatProtectionMonitoringEffect",
        "parameters": {
          "effect": {
            "value": "[parameters('kubernetesServiceAdvancedThreatProtectionMonitoringEffect')]"
          }
        }
      }
    ]
  },
  "id": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
  "name": "1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
}